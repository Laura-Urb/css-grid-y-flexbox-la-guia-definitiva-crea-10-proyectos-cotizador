{"version":3,"sources":["components/Header.js","components/Formulario.js","Helper.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","setResumen","setCargando","useState","marca","year","plan","datos","setDatos","error","setError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementarPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","onChange","type","checked","ContenedorResumen","Resumen","texto","charAt","toUpperCase","slice","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","key","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.922fadb9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst ContenedorHeader = styled.header`\r\n  background-color: #26c6da;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: #ffffff;\r\n`;\r\n\r\nconst TextoHeader = styled.h1`\r\n  font-size: 2rem;\r\n  margin: 0;\r\n  font-family: \"Slabo 27px\", serif;\r\n  text-align: center;\r\n`;\r\n\r\nconst Header = ({ titulo }) => {\r\n  return (\r\n    <ContenedorHeader>\r\n      <TextoHeader>{titulo}</TextoHeader>\r\n    </ContenedorHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { obtenerDiferenciaYear, calcularMarca, obtenerPlan } from \"../Helper\";\r\n\r\nconst Campo = styled.div`\r\n  display: flex;\r\n  margin-bottom: 1rem;\r\n  align-items: center;\r\n`;\r\nconst Label = styled.label`\r\n  flex: 0 0 100px;\r\n`;\r\nconst Select = styled.select`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  border: 1px solid #e1e1e1;\r\n  -webkit-appearance: none;\r\n`;\r\nconst InputRadio = styled.input`\r\n  margin: 0 1rem;\r\n`;\r\nconst Boton = styled.button`\r\n  background-color: #00838f;\r\n  font-size: 16px;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  border: none;\r\n  transition: background-color 0.3s ease;\r\n  margin-top: 2rem;\r\n\r\n  &:hover {\r\n    background-color: #26c6da;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Error = styled.div`\r\n  background-color: red;\r\n  color: white;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst Formulario = ({ setResumen, setCargando }) => {\r\n  const [datos, setDatos] = useState({\r\n    marca: \"\",\r\n    year: \"\",\r\n    plan: \"basico\",\r\n  });\r\n\r\n  const [error, setError] = useState(false);\r\n\r\n  //extraer los valores del state\r\n  const { marca, year, plan } = datos;\r\n\r\n  //Leer los datos del formulario y colocarlos en el state\r\n  const obtenerInformacion = (e) => {\r\n    setDatos({ ...datos, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const cotizarSeguro = (e) => {\r\n    setCargando(true);\r\n    e.preventDefault();\r\n\r\n    if (marca.trim() === \"\" || year.trim() === \"\" || plan.trim() === \"\") {\r\n      setError(true);\r\n      return;\r\n    }\r\n\r\n    setError(false);\r\n\r\n    let resultado = 2000;\r\n\r\n    const diferencia = obtenerDiferenciaYear(year);\r\n\r\n    resultado -= (diferencia * 3 * resultado) / 100;\r\n\r\n    resultado = calcularMarca(marca);\r\n\r\n    const incrementarPlan = obtenerPlan(plan);\r\n\r\n    resultado = parseFloat(incrementarPlan * resultado).toFixed(2);\r\n\r\n    setTimeout(() => {\r\n      setCargando(false);\r\n      setResumen({\r\n        cotizacion: resultado,\r\n        datos,\r\n      });      \r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={cotizarSeguro}>\r\n      {error ? <Error>Todos los campos son obligatorios</Error> : null}\r\n      <Campo>\r\n        <Label>Marca</Label>\r\n        <Select name=\"marca\" value={marca} onChange={obtenerInformacion}>\r\n          <option value=\"\">-- Seleccione --</option>\r\n          <option value=\"americano\">Americano</option>\r\n          <option value=\"asiatico\">Asiatico</option>\r\n          <option value=\"europeo\">Europeo</option>\r\n        </Select>\r\n      </Campo>\r\n      <Campo>\r\n        <Label>Año</Label>\r\n        <Select name=\"year\" value={year} onChange={obtenerInformacion}>\r\n          <option value=\"\">-- Seleccione --</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n          <option value=\"2018\">2018</option>\r\n          <option value=\"2017\">2017</option>\r\n          <option value=\"2016\">2016</option>\r\n          <option value=\"2015\">2015</option>\r\n          <option value=\"2014\">2014</option>\r\n          <option value=\"2013\">2013</option>\r\n          <option value=\"2012\">2012</option>\r\n        </Select>\r\n      </Campo>\r\n      <Campo>\r\n        <Label>Plan</Label>\r\n        <InputRadio\r\n          type=\"radio\"\r\n          name=\"plan\"\r\n          value=\"basico\"\r\n          checked={plan === \"basico\"}\r\n          onChange={obtenerInformacion}\r\n        />\r\n        Básico\r\n        <InputRadio\r\n          type=\"radio\"\r\n          name=\"plan\"\r\n          value=\"completo\"\r\n          checked={plan === \"completo\"}\r\n          onChange={obtenerInformacion}\r\n        />\r\n        Completo\r\n      </Campo>\r\n      <Boton type=\"submit\" onSubmit={{}}>\r\n        Cotizar\r\n      </Boton>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","// obtiene la diferencia de años\r\nexport function obtenerDiferenciaYear(year) {\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\n// calcula el total a pagar segun la marca\r\nexport function calcularMarca(marca) {\r\n    let incremento;\r\n\r\n    switch(marca) {\r\n        case 'europeo':\r\n            incremento = 1.30;\r\n            break;\r\n        case 'americano':\r\n            incremento = 1.15;\r\n            break;\r\n        case 'asiatico':\r\n            incremento = 1.05;\r\n            break\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return incremento;\r\n}\r\n\r\n// Calcula el tipo de seguro\r\nexport function obtenerPlan( plan ) {\r\n    return (plan === 'basico') ? 1.20 : 1.50;\r\n}\r\n\r\n// Muestra la primer letra mayuscula\r\nexport function primerMayuscula( texto) {\r\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n}","import React, { Fragment } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { primerMayuscula } from \"../Helper\";\r\n\r\nconst ContenedorResumen = styled.div`\r\n  padding: 1rem;\r\n  text-align: center;\r\n  background-color: #00838f;\r\n  color: #fff;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst Resumen = ({ datos }) => {\r\n  const { marca, year, plan } = datos;\r\n\r\n  if (marca.trim() === \"\" || year.trim() === \"\" || plan.trim() === \"\")\r\n    return null;\r\n\r\n  return (\r\n    <ContenedorResumen>\r\n      <h2>Resumen de Cotización</h2>\r\n      <ul>\r\n        <li>Marca: {primerMayuscula(marca)}</li>\r\n        <li>Plan: {plan}</li>\r\n        <li>Año del Auto: {year}</li>\r\n      </ul>\r\n    </ContenedorResumen>\r\n  );\r\n};\r\n\r\nexport default Resumen;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst Mensaje = styled.p`\r\n  background-color: rgb(127, 224, 237);\r\n  margin-top: 2rem;\r\n  padding: 1rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst ResultadoCotizacion = styled.div`\r\n  text-align: center;\r\n  padding: 0.5rem;\r\n  border: 1px solid #26c6da;\r\n  background-color: rgb(127, 224, 237);\r\n  margin-top: 1rem;\r\n  position: relative;\r\n`;\r\n\r\nconst TextoCotizacion = styled.p`\r\n  color: #00838f;\r\n  padding: 1rem;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  margin: 0;\r\n`;\r\n\r\nconst Resultado = ({ cotizacion }) => {\r\n  return cotizacion === 0 ? (\r\n    <Mensaje>Elije marca, año y tipo de seguro</Mensaje>\r\n  ) : (\r\n    <ResultadoCotizacion>\r\n      <TransitionGroup component=\"p\" className=\"resultado\">\r\n        <CSSTransition\r\n          classNames=\"resultado\"\r\n          key={cotizacion}\r\n          timeout={{ enter: 500, exit: 500 }}\r\n        >\r\n          <TextoCotizacion>El total es $ {cotizacion}</TextoCotizacion>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n    </ResultadoCotizacion>\r\n  );\r\n};\r\n\r\nexport default Resultado;\r\n","import React from \"react\";\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"sk-circle\">\r\n      <div className=\"sk-circle1 sk-child\"></div>\r\n      <div className=\"sk-circle2 sk-child\"></div>\r\n      <div className=\"sk-circle3 sk-child\"></div>\r\n      <div className=\"sk-circle4 sk-child\"></div>\r\n      <div className=\"sk-circle5 sk-child\"></div>\r\n      <div className=\"sk-circle6 sk-child\"></div>\r\n      <div className=\"sk-circle7 sk-child\"></div>\r\n      <div className=\"sk-circle8 sk-child\"></div>\r\n      <div className=\"sk-circle9 sk-child\"></div>\r\n      <div className=\"sk-circle10 sk-child\"></div>\r\n      <div className=\"sk-circle11 sk-child\"></div>\r\n      <div className=\"sk-circle12 sk-child\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport styled from \"@emotion/styled\";\nimport Formulario from \"./components/Formulario\";\nimport Resumen from \"./components/Resumen\";\nimport Resultado from \"./components/Resultado\";\nimport Spinner from \"./components/Spinner\";\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n  background-color: #fff;\n  padding: 3rem;\n`;\n\nfunction App() {\n  const [resumen, setResumen] = useState({\n    cotizacion: 0,\n    datos: {\n      marca: \"\",\n      year: \"\",\n      plan: \"\",\n    },\n  });\n\n  const [cargando, setCargando] = useState(false);\n\n  const { datos, cotizacion } = resumen;\n\n  return (\n    <Contenedor>\n      <Header titulo=\"Cotizador de Seguros\"></Header>\n      <ContenedorFormulario>\n        <Formulario\n          setResumen={setResumen}\n          setCargando={setCargando}\n        ></Formulario>\n        {cargando ? <Spinner></Spinner> : null}\n        <Resumen datos={datos}></Resumen>\n        {!cargando ? <Resultado cotizacion={cotizacion}></Resultado> : null}\n      </ContenedorFormulario>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}